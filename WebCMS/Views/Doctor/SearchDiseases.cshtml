@model List<WebCMS.Models.PatiensDiseases>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";

}


<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
<!-- jQuery -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

<!-- Select2 CSS -->
<link href="https://unpkg.com/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />

<!-- Select2 JS -->
<script src="https://unpkg.com/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

<table class="form form-boarder">
    <thead>
    <tr>
        <th>Disease</th>
        <th>IC10 Code</th>
        <th>Dignaosed Date</th>
        <th>By Doctor</th>
    </tr>
    </thead>

    <tbody>
        @foreach (var i in Model)
        {
            <tr>@i.DiseaseName</tr>
            <tr>@i.ICD10Code</tr>
            <tr>@i.DiagnosedDate</tr>
            <tr>@i.DiagnosedbyDr</tr>
        }
        
    </tbody>

</table>



<h2>Assign Disease to Patient</h2>

<form asp-action="AddDiagnoseToPatient" method="post">
    <input type="hidden" name="patientId" value="@ViewBag.PatientId" />

    <select id="diseaseSelect" name="diseaseId" class="form-control" style="width: 100%;">
        <!-- Options loaded dynamically via AJAX -->
    </select>

    <button type="submit" class="btn btn-primary mt-2">Add</button>
</form>




<script>
    $(document).ready(function () {
        $('#diseaseSelect').select2({
            placeholder: "Search disease...",
            allowClear: true,
            minimumInputLength: 2, // only send AJAX queries after 2 chars typed
            ajax: {
                url: '@Url.Action("SearchDiseases")',
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        term: params.term,
                        page: params.page || 1
                    };
                },
                processResults: function (data, params) {
                    params.page = params.page || 1;
                    return {
                        results: data.results,
                        pagination: {
                            more: data.pagination.more
                        }
                    };
                },
                cache: true
            }
        });
    });
</script>

