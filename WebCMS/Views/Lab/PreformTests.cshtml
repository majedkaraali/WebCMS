@model LabTestResultViewModel
@{
    ViewData["Title"] = "Perform Lab Test";
}

<div class="container mt-4">
    <div class="card shadow-sm mb-4">
        <div class="card-header bg-primary text-white">
            <h2 class="mb-0">Perform the Test</h2>
        </div>
        <div class="card-body">
           
            <div class="mb-4">
                <h4 class="text-muted">Patient: <span class="text-dark fw-bold">@ViewBag.PatientName</span></h4>
                <h4 class="text-muted">Test: <span class="text-dark fw-bold">@ViewBag.TestName</span></h4>
                <h4 class="text-muted">Gender: <span class="text-dark fw-bold">@ViewBag.PatientGender</span></h4>

            </div>

            <form asp-action="SendResult" method="post" class="needs-validation" novalidate>
                <input type="hidden" asp-for="OrderId" />

                <div class="row g-3">
                    @for (int i = 0; i < Model.Results.Count; i++)
                    {
                        <div class="col-md-6">
                            <div class="card mb-3">
                                <div class="card-header bg-light">
                                    <h5 class="mb-0">@Model.Results[i].LabTest.TestName</h5>
                                </div>
                                <div class="card-body">
                                    <div class="mb-3">
                                        
                                        <div class="alert alert-light py-2">
                                         
                                            <span class="badge bg-success mx-2">Normal Value: @Model.Results[i].LabTest.NormalValue</span>
                                          
                                        </div>
                                    </div>

                                    <input type="hidden" asp-for="Results[i].LabTestId" />

                                    <div class="form-floating">
                                        <input type="text" class="form-control"
                                               asp-for="Results[i].Result"
                                               placeholder="Enter test result"
                                               required>
                                        <label asp-for="Results[i].Result">Test Result</label>
                                        <div class="invalid-feedback">Please enter a valid result</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
                    <button type="submit" class="btn btn-primary px-4">
                        <i class="bi bi-send-check"></i> Submit Results
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .form-floating > label {
            color: #6c757d;
        }
    </style>
}

@section Scripts {
    <script>
   
        (function () {
            'use strict'
            const forms = document.querySelectorAll('.needs-validation')
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }
                    form.classList.add('was-validated')
                }, false)
            })
        })();
    </script>
}